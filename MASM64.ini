[Description]
1=MASM64 x64 macro assembler Masm compatible.\r\nGet MASM64 SDK at:\r\nhttps://masm32.com/board/index.php?board=53.0

[Environment]
1=path,\MASM64\bin;

[CharTab]
2=0251122522222232;20-2F
3=1111111111242221;30-3F


[Open]
0="Assembly (*.asm;*.inc),*.asm;*.inc"
1="Resource Files (*.rc),*.rc"
2="Text Files (*.txt),*.txt"
3="All Files (*.*),*.*"
src="Assembly (*.asm),*.asm,asm"
hdr="Include (*.inc),*.inc,inc"
mod="Module (*.asm),*.asm,asm"


[CodeMacro]
;KeyWord,InsertBeforeActiveLine,InsertAfterActiveLine
;{I}=Copy indent from keyword line
;{C}=Cr
;{S}=Space
;{T}=Tab
;{$}=Copy Proc/Struct Name
;The macros are set up to assume AutoIndent on
1=.if,{T},{C}{I}.endif
2=.else,{T},
3=.elseif,{T},
4=.while,{T},{C}{I}.endw
5=.repeat,{T},{C}{I}.until
6=$ macro,{T},{C}{I}endm
7=$ proc,{T}{C}{I}{T},{C}{I}{T}ret{C}{C}{I}{$} endp
8=$ struct,{T},{C}{I}{$} ends
9=$ struc,{T},{C}{I}{$} ends
10=Method,{I}{T}SetObject EDX{C}{I}{T},{C}{I}MethodEnd
11=Object,{I}{T},{C}{I}ObjectEnd

[Code]
ParseDll=MASM64Parse.dll
Skip={C},option,@@,include,includelib
Code=? endp,$ proc
Const={C},$ equ,$ =,$ textequ
Data={C},$ db,$ dw,$ dd,$ dq,$ df,$ dt,$ byte,$ word,$ dword,$ qword,$ real4,$ real8,$ tbyte
Macro=endm,$ macro
Struct=? ends,$ struct,$ struc,$ union
Label={C},$ :
Local={C},local $
Other=Methods,10,Objects,11
Methods=MethodEnd,Method $
Objects=ObjectEnd,Object $

[CodeBlock]
1=$ proc,? endp,,,6
2=.if,.endif,.elseif,.else,0
3=.while,.endw,.break,.continue,0
4=
;;switch,endsw,case,default,0
5=? struct|? struc|? union,? ends,,,2
6=$ macro,endm,,,14
7=.code,,,,16
8=.data,,,,16
9=.data?,,,,16
10=.const,,,,16
11=BEGIN,END,,,0,1
12=Method,MethodEnd,,,6
13=Object,ObjectEnd,,,4
14=;##\,;##/,,,4
15=comment,,,,32
16=.repeat,.until|.untilcxz,.break,.continue,0

[Api]
Trig=invoke,func(,call,$invoke(
Call=MASM64\MASM64ApiCall.api,MASM64\MASM64ApiMacroCall.api
Const=MASM64\MASM64ApiConst.api
Struct=MASM64\MASM64ApiStruct.api
Word=MASM64\MASM64ApiWord.api,MASM64\MASM64StructWord.api
Message=MASM64\MASM64Message.api
Type=MASM64\MASM64Type.api
Array=MASM64\MASM64Array.api
inc=include
lib=includelib

[Edit]
Font=Consolas
FontHeight=-13
FontWeight=400
FontItalic=0
FontCharSet=0
TxtFont=Courier New
TxtFontHeight=-12
TxtFontWeight=400
TxtFontCharSet=0
TabSize=4
Backup=9
AutoSave=1
BacupPath=$P\Bak\
AutoIndent=1
ApiList=1
ApiToolTip=1
Properties=1
MouseWheel=1
SaveSize=1
Maximize=1
ApiConst=1
CodeWrite=1
TabToSpc=1
ApiStruct=1
PrnFont=Courier New
PrnFontHeight=-12
PrnFontWeight=400
PrnFontCharSet=0
PrnPage=20990,29690,1000,1000,1000,1000,0
PrnOption=2,0,1,1,1
PrnColor=0,32768,8421504,255,65280,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760,10485760
ApiWordConv=1
ApiWordLocal=1
CodeFiles=.asm.inc.rc.tpl.rad.def.api.
ProcsToApi=1
ProcInSBar=1
CmntBlock=comment +,-
LnrFont=Lucida Console
LnrFontHeight=-11
TxtFontItalic=0
ApiShiftSpace=1
LnrWidth=4
LnrOnOpen=1
PageSize=63
OpenCollapsed=0
LnSpc=0
AutoBrackets=1
CodeTooltip=1
BraceMatch=({[,)}],\,
HexFont=Courier New
HexFontHeight=-12
HexFontWeight=400
HexFontItalic=0
HexFontCharSet=0
DlgFont=MS Sans Serif
DlgFontHeight=-11
DlgFontWeight=400
DlgFontItalic=0
DlgFontCharSet=0
ToolFont=MS Sans Serif
ToolFontHeight=-12
ToolFontWeight=400
ToolFontItalic=0
ToolFontCharSet=0
ThreadBuild=1
ChangeNotify=1
MinimizeOnBuild=0
HiliteLine=0
HiliteCmnt=0
EnterOnTab=0

[Dialog]
Grid=1
GridX=4
GridY=4
SnapToGrid=1
ShowSize=1
SaveRC=1
SimpleProperty=0
DlgID=1000
CtrlID=1001
GridLine=0
GridColor=0
LimittedFont=0

[Error]
BookMark=3
Text=$R\MASM64\error.txt

[Paths]
$A=\MASM64
$B=$A\bin64
$D=$R\AddIns
$H=$A\Help
$I=$A\include64
$L=$A\lib\x64
$P=$R\MASM64\Projects
$S=$R\MASM64\Sniplets
$T=$R\MASM64\Templates
$M=$R\MASM64\Macro
$E=$R\x64dbg\release\x64

[MakeFiles]
0=.rap
1=.rc
2=.asm
3=.obj
4=.res
5=.exe
6=.def
7=.dll
8=.txt
9=.lib
10=.mak
11=.hla
12=.com
13=.ocx
14=.idl
15=.tlb
16=.sys
17=.dp32
18=.pdb
19=.dp64
20=.md

[Project]
Type=Win64 App,Dll64 Project,LIB64 Project,Console64 App,Driver (.sys),Service
Files=Asm,Inc,Rc,Def,Txt,Mak,idl,rgs,md
Folders=Bak,Mod,Res,Lib
MenuMake=Compile RC,Assemble,Link,Build,Go,Run,Run w/debug,Go All,Assemble Modules,Compile IDL
Group=1
GroupExpand=1

[MakeDefNoProject]
MenuMake=1,1,1,1,1,1,1,1,0,0
1=rsrc.res,O,$B\RC.EXE /v,rsrc.rc
2=$.obj,O,$B\ML64.EXE /c /nologo /I"$I",$.asm
3=$.exe,O,$B\LINK.EXE /SUBSYSTEM:WINDOWS /RELEASE /LIBPATH:"$L",$.obj,rsrc.res
4=0,0,,$.exe
5=rsrc.obj,O,$B\CVTRES.EXE,rsrc.res
6=*.obj,O,$B\ML64.EXE /c /nologo /I"$I",*.asm
7=0,0,"$E\x32\x32dbg",$.exe
11=rsrc.res,O,$B\RC.EXE /v,rsrc.rc
12=$.obj,O,$B\ML64.EXE /c /Cp /Zi /Zd /nologo /I"$I",$.asm
13=$.exe,O,$B\LINK.EXE /SUBSYSTEM:WINDOWS /DEBUG /DEBUGTYPE:CV /PDB:$18 /LIBPATH:"$L",$.obj,rsrc.res
14=0,0,,$.exe
15=rsrc.obj,O,$B\CVTRES.EXE,rsrc.res
16=*.obj,O,$B\ML64.EXE /c /Cp /Zi /Zd /nologo /I"$I",*.asm
17=0,0,"$E\x32\x32dbg",$.exe

[Win64 App]
Files=1,1,1,0,0
Folders=1,0,1,0
MenuMake=1,1,1,1,1,1,1,1,0,0
;x=FileToDelete/CheckExistsOnExit,
;(O)utput/(C)onsole/0,Command,
;MakeFile1[,MakeFile2[,MakeFile3...]]
1=4,O,$B\RC.EXE /v,1
2=3,O,$B\ML64.exe /c /nologo /W2 /I"$I",2
3=5,O,$B\LINK.EXE /SUBSYSTEM:WINDOWS /RELEASE /MACHINE:X64 /LIBPATH:"$L" /OUT:"$5",3,4
4=0,0,,5
5=rsrc.obj,O,$B\CVTRES.EXE,rsrc.res
6=*.obj,O,$B\ML64.exe /c /nologo /W2 /I"$I",*.asm
7=0,0,"$E\x64\x64dbg",5
11=4,O,$B\RC.EXE /v,1
12=3,O,$B\ML64.exe /c /Cp /nologo /W2 /Zi /Zd /nologo /I"$I",2
13=5,O,$B\LINK.EXE /SUBSYSTEM:WINDOWS /DEBUG /DEBUGTYPE:CV /PDB:$18 /MACHINE:X64 /LIBPATH:"$L" /OUT:"$5",3,4
14=0,0,,5
15=rsrc.obj,O,$B\CVTRES.EXE,rsrc.res
16=*.obj,O,$B\ML64.exe /c /Zi /Zd /Cp /nologo /W2 /I"$I",*.asm
17=0,0,"$E\x64\x64dbg",$.exe

[Console64 App]
Files=1,1,0,0,0
Folders=1,0,0,0
MenuMake=1,1,1,1,1,1,1,1,0,0
;x=FileToDelete/CheckExistsOnExit,
;(O)utput/(C)onsole/0,Command,
;MakeFile1[,MakeFile2[,MakeFile3...]]
1=4,O,$B\RC.EXE /v,1
2=3,O,$B\ML64.EXE /c /nologo /W2 /I"$I",2
3=5,O,$B\LINK.EXE /SUBSYSTEM:CONSOLE /RELEASE /MACHINE:X64 /LIBPATH:"$L" /OUT:"$5",3
4=0,0,,5
5=rsrc.obj,O,$B\CVTRES.EXE,rsrc.res
6=*.obj,O,$B\ML64.EXE /c /nologo /W2 /I"$I",*.asm
7=0,0,"$E\x64dbg",5
11=4,O,$B\RC.EXE /v,1
12=3,O,$B\ML64.EXE /c /Cp /nologo /W2 /Zi /Zd /nologo /I"$I",2
13=5,O,$B\LINK.EXE /SUBSYSTEM:CONSOLE /DEBUG /DEBUGTYPE:CV /PDB:$18 /MACHINE:X64 /LIBPATH:"$L" /OUT:"$5",3,4
14=0,0,,5
15=rsrc.obj,O,$B\CVTRES.EXE,rsrc.res
16=*.obj,O,$B\ML64.EXE /c /Zi /Zd /Cp /nologo /W2 /I"$I",*.asm
17=0,0,"$E\x64\x64dbg",$.exe

[Dll64 Project]
Files=1,1,0,1,0
Folders=1,0,0,0
MenuMake=0,1,1,1,0,0,0,0,0,0
;x=MakeFileToDelete/CheckExistsOnExit,
;(O)utput/(C)onsole/0,Command,
;MakeFile1[,MakeFile2[,MakeFile3...]]
1=4,O,$B\RC.EXE /v,1
2=3,O,$B\ML64.exe /c /nologo /W2 /I"$I",2
3=7,O,$B\LINK.EXE /SUBSYSTEM:WINDOWS /RELEASE /DLL /DEF:$6 /MACHINE:X64 /LIBPATH:"$L" /OUT:"$7",3
4=0,0,,5
5=rsrc.obj,O,$B\CVTRES.EXE,rsrc.res
6=*.obj,O,$B\ML64.exe /c /nologo /W2 /I"$I",*.asm
7=0,0,"$E\x64\x64dbg",5
11=4,O,$B\RC.EXE /v,1
12=3,O,$B\ML64.exe /c /Cp /nologo /W2 /Zi /Zd /nologo /I"$I",2
13=7,O,$B\LINK.EXE /SUBSYSTEM:WINDOWS /DEBUG /DEBUGTYPE:CV /PDB:$18 /DLL /DEF:$6 /MACHINE:X64 /LIBPATH:"$L" /OUT:"$7",3
14=0,0,,5
15=rsrc.obj,O,$B\CVTRES.EXE,rsrc.res
16=*.obj,O,$B\ML64.exe /c /Zi /Zd /Cp /nologo /W2 /I"$I",*.asm
17=0,0,"$E\x64\x64dbg",$.exe

[LIB64 Project]
Files=1,1,0,0,0
Folders=1,0,0,0
MenuMake=0,1,1,1,0,0,0,0,1,0
;x=MakeFileToDelete/CheckExistsOnExit,
;(O)utput/(C)onsole/0,Command,
;MakeFile1[,MakeFile2[,MakeFile3...]]
1=4,O,$B\RC.EXE /v,1
2=3,O,$B\ML64.exe /c /nologo /W2 /I"$I",2
3=9,O,$B\LIB.EXE *.obj /out:"$9"
4=0,0,,5
5=rsrc.obj,O,$B\CVTRES.EXE,rsrc.res
6=*.obj,O,$B\ML64.exe /c /nologo /W2 /I"$I",*.asm
7=0,0,"$E\x64\x64dbg",5
11=4,O,$B\RC.EXE /v,1
12=3,O,$B\ML64.exe /c /Cp /nologo /W2 /Zi /Zd /nologo /I"$I",2
13=9,O,$B\LIB.EXE *.obj /out:"$9"
14=0,0,,5
15=rsrc.obj,O,$B\CVTRES.EXE,rsrc.res
16=*.obj,O,$B\ML64.exe /c /Cp /Zi /Zd /Cp /nologo /W2 /I"$I",*.asm
17=0,0,"$E\x64\x64dbg",5

[MenuMake]
1=&Compile RC,372,M,1
2=&Assemble,116,M,2
3=&Link,1652,M,3
4=&Build,1396,M,2,3
5=-,0,M,
6=&Go,628,M,2,3,4
7=-,0,M,
8=&Run,884,M,4
9=Run w/&Debug,580,M,7
10=-,0,M,
11=Go &All,1140,M,1,2,3,4
12=-,0,M,
13=Assemble &Modules,0,M,6
Ver=100

[Color]
UseColor=1
DivLine=1
NoFlicker=0
Back=3549952
Fore=9868419
SelBack=10592659
SelText=4339207
HiLine1=6316128
HiLine2=12644544
HiLine3=4605510
Bar=8533715
BarPen=1461195
LnrFontColor=8388608
Cmnt=33609727
Str=10592659
Oper=2631935
C0=12874092
C1=39301
C2=16744448
C3=8533715
C4=12874092
C5=11184640
C6=1461195
C7=8533715
C8=25310931
C9=12874092
C10=282233638
C11=16711680
C12=16711680
C13=13798182
C14=1461195
C15=13798182
Output=3549952
Project=3549952
Property=3549952
Dialog=8421376
CustColors=14680063,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Outputtext=9868419
Projecttext=9868419
Propertytext=9868419
CmntBack=3549952
StrBack=3549952
NumBack=3549952
OperBack=3549952
B0=2039583
B1=2039583
B2=2039583
B3=2039583
B4=2039583
B5=2039583
B6=2039583
B7=2039583
B8=2039583
B9=2039583
B10=2039583
B11=2039583
B12=2039583
B13=2039583
B14=2039583
B15=2039583
Num=1461195
Info=3549952
Infotext=9868419

[KeyWords]
; Registers
C0=AH AL AX BH BL BP BX CH CL CR0 CR2 CR3 CS CX DH DI DL DR0 DR1 DR2 DR3 DR6 DR7 DS DX EAX EBP EBX ECX EDI EDX ES ESI ESP FS GS MM0 MM1 MM2 MM3 MM4 MM5 MM6 MM7 SI SP SS ST TR3 TR4 TR5 TR6 TR7 RAX RBX RCX RDX RBP RSI RDI RSP R8 R9 R10 R11 R12 R13 R14 R15 XMM0 XMM1 XMM2 XMM3 XMM4 XMM5 XMM6 XMM7 XMM8 XMM9 XMM10 XMM11 XMM12 XMM13 XMM14 XMM15 XMM16 XMM17 XMM18 XMM19 XMM20 XMM21 XMM22 XMM23 XMM24 XMM25 XMM26 XMM27 XMM28 XMM29 XMM30 XMM31 YMM0 YMM1 YMM2 YMM3 YMM4 YMM5 YMM6 YMM7 YMM8 YMM9 YMM10 YMM11 YMM12 YMM13 YMM14 YMM15 YMM16 YMM17 YMM18 YMM19 YMM20 YMM21 YMM22 YMM23 YMM24 YMM25 YMM26 YMM27 YMM28 YMM29 YMM30 YMM31 ZMM0 ZMM1 ZMM2 ZMM3 ZMM4 ZMM5 ZMM6 ZMM7 ZMM8 ZMM9 ZMM10 ZMM11 ZMM12 ZMM13 ZMM14 ZMM15 ZMM16 ZMM17 ZMM18 ZMM19 ZMM20 ZMM21 ZMM22 ZMM23 ZMM24 ZMM25 ZMM26 ZMM27 ZMM28 ZMM29 ZMM30 ZMM31 none auto
; Instructions
C1=ADC ADD AND ARPL BOUND BSF BSR BSWAP BT BTC BTR BTS CALL CBW CDQ CLC CLD CLI CLTS CMC CMOVA CMOVAE CMOVB CMOVBE CMOVC CMOVE CMOVG CMOVGE CMOVL CMOVLE CMOVNA CMOVNAE CMOVNB CMOVNBE CMOVNC CMOVNE CMOVNG CMOVNGE CMOVNL CMOVNLE CMOVNO CMOVNP CMOVNS CMOVNZ CMOVO CMOVP CMOVPE CMOVPO CMOVS CMOVZ CMP CMPS CMPSB CMPSD CMPSW CMPXCHG CMPXCHG8B CPUID CWD CWDE DAS DEC DIV DAA ENTER HLT IDIV IMUL IN INC INS INSB INSD INSW INT INTO INVD INVLPG IRET IRETD IRETDF IRETF JA JAE JB JBE JC JCXZ JE JECXZ JG JGE JL JLE JMP JNA JNAE JNB JNBE JNC JNE JNG JNGE JNL JNLE JNO JNP JNS JNZ JO JP JPE JPO JS JZ LAHF LAR LDS LEA LEAVE LES LFS LGDT LGS LIDT LLDT LMSW LOCK LODS LODSB LODSD LODSW LOOP LOOPD LOOPE LOOPED LOOPEW LOOPNE LOOPNED LOOPNEW LOOPNZ LOOPNZD LOOPNZW LOOPW LOOPZ LOOPZD LOOPZW LSL LSS LTR MOV MOVS MOVSB MOVSD MOVSW MOVSX MOVZX MUL NEG NOP NOT OR OUT OUTS OUTSB OUTSD OUTSW POP POPA POPAD POPF POPFD PUSH PUSHA PUSHAD PUSHAW PUSHD PUSHF PUSHFD PUSHW RCL RCR RDMSR RDTSC REP REPE REPNE REPNZ REPZ RET RETF RETN ROL ROR RSM SAHF SAL SAR SBB SCAS SCASB SCASD SCASW SETA SETAE SETB SETBE SETC SETE SETG SETGE SETL SETLE SETNA SETNAE SETNB SETNBE SETNC SETNE SETNG SETNGE SETNL SETNLE SETNO SETNP SETNS SETNZ SETO SETP SETPE SETPO SETS SETZ SGDT SHL SHLD SHR SHRD SIDT SLDT SMSW STC STD STI STOS STOSB STOSD STOSW STR SUB TEST VERR VERW WAIT WBINVD WRMSR XADD XCHG XLAT XLATB XOR AAA AAD AAM AAS KAND KANDN KMOV KUNPCK KNOT KOR KORTEST KSHIFTL KSHIFTR KXNOR KXOR KADD KTEST
; Instructions
C2=F2XM1 FABS FADD FADDP FBLD FBSTP FCHS FCLEX FCMOVA FCMOVAE FCMOVB FCMOVBE FCMOVE FCMOVNA FCMOVNAE FCMOVNB FCMOVNBE FCMOVNE FCMOVNU FCMOVU FCOM FCOMI FCOMIP FCOMP FCOMPP FCOS FDECSTP FDISI FDIV FDIVP FDIVR FDIVRP FENI FFREE FIADD FICOM FICOMP FIDIV FIDIVR FILD FIMUL FINCSTP FINIT FIST FISTP FISUB FISUBR FLD FLD1 FLDCW FLDENV FLDENVD FLDENVW FLDL2E FLDL2T FLDLG2 FLDLN2 FLDPI FLDZ FMUL FMULP FNCLEX FNDISI FNENI FNINIT FNOP FNSAVE FNSAVED FNSAVEW FNSTCW FNSTENV FNSTENVD FNSTENVW FNSTSW FPATAN FPREM FPREM1 FPTAN FRNDINT FRSTOR FRSTORD FRSTORW FSAVE FSAVED FSAVEW FSCALE FSETPM FSIN FSINCOS FSQRT FST FSTCW FSTENV FSTENVD FSTENVW FSTP FSTSW FSUB FSUBP FSUBR FSUBRP FTST FUCOM FUCOMI FUCOMIP FUCOMP FUCOMPP FWAIT FXAM FXCH FXTRACT FYL2X FYL2XP1
; FPU Instructions
C3=EMMS FEMMS FXRSTOR FXSAVE MOVD MOVQ PACKSSDW PACKSSWB PACKUSWB PADDB PADDD PADDSB PADDSW PADDUSB PADDUSW PADDW PAND PANDN PCMPEQB PCMPEQD PCMPEQW PCMPGTB PCMPGTD PCMPGTW PMADDWD PMULHW PMULLW POR PSLLD PSLLQ PSLLW PSRAD PSRAW PSRLD PSRLQ PSRLW PSUBB PSUBD PSUBSB PSUBSW PSUBUSB PSUBUSW PSUBW PUNPCKHBW PUNPCKHDQ PUNPCKHWD PUNPCKLBW PUNPCKLDQ PUNPCKLWD PXOR PSIGNB PSIGNW PSIGND PABSB PABSW PABSD PALIGNR PSHUFB PMULHRSW PMADDUBSW PHSUBW PHSUBD PHSUBSW PHADDW PHADDD PHADDSW ADDSUBPD ADDSUBPS HADDPD HADDPS HSUBPD HSUBPS LDDQU MOVDDUP MOVSHDUP MOVSLDUP FISTTP MONITOR MWAIT MPSADBW PHMINPOSUW PMULLD PMULDQ DPPS DPPD BLENDPS BLENDPD BLENDVPS BLENDVPD PBLENDVB PBLENDW PMINSB PMAXSB PMINUW PMAXUW PMINUD PMAXUD PMINSD PMAXSD ROUNDPS ROUNDSS ROUNDPD ROUNDSD INSERTPS PINSRB PINSRD PINSRQ EXTRACTPS PEXTRB PEXTRW PEXTRD PEXTRQ PMOVSXBW PMOVZXBW PMOVSXBD PMOVZXBD PMOVSXBQ PMOVZXBQ PMOVSXWD PMOVZXWD PMOVSXWQ PMOVZXWQ PMOVSXDQ PMOVZXDQ PTEST PCMPEQQ PACKUSDW MOVNTDQA EXTRQ INSERTQ MOVNTSD MOVNTSS CRC32 PCMPESTRI PCMPESTRM PCMPISTRI PCMPISTRM PCMPGTQ VFMADDPD VFMADDPS VFMADDSD VFMADDSS VFMADDSUBPD VFMADDSUBPS VFMSUBADDPD VFMSUBADDPS VFMSUBPD VFMSUBPS VFMSUBSD VFMSUBSS VFNMADDPD VFNMADDPS VFNMADDSD VFNMADDSS VFNMSUBPD VFNMSUBPS VFNMSUBSD VFNMSUBSS AESENC AESENCLAST AESDEC AESDECLAST AESKEYGENASSIST AESIMC VBROADCASTSS VBROADCASTSD VBROADCASTF128 VINSERTF128 VEXTRACTF128 VMASKMOVPS VMASKMOVPD VPERMILPS VPERMILPD VPERM2F128 VZEROALL VZEROUPPER VBROADCASTSS VBROADCASTSD VPBROADCASTB VPBROADCASTW VPBROADCASTD VPBROADCASTQ VBROADCASTI128 VINSERTI128 VEXTRACTI128 VGATHERDPD VGATHERQPD VGATHERDPS VGATHERQPS VPGATHERDD VPGATHERDQ VPGATHERQD VPGATHERQQ VPMASKMOVD VPMASKMOVQ VPERMPS VPERMD VPERMPD VPERMQ VPERM2I128 VPBLENDD VPSLLVD VPSLLVQ VPSRLVD VPSRLVQ VPSRAVD VBLENDMPD VBLENDMPS VBLENDDMD VBLENDDMQ VBLENDDMB VBLENDDMW VPCMPD VPCMPUD VPCMPQ VPCMPUQ VPCMPB VPCMPUB VPCMPW VPCMPUW VPTESTMD VPTESTMQ VPTESTNMD VPTESTNMQ VCOMPRESSPD VCOMPRESSPS VPCOMPRESSD VPCOMPRESSQ VEXPANDPD VEXPANDPS VPEXPANDD VPEXPANDQ VPERMI2PD VPERMI2Q VPERMI2PS VPERMI2D VPERMI2W VPERMT2PD VPERMT2Q VPERMT2PS VPERMT2D VPERMT2W VPTERNLOGD VPTERNLOGQ VGETEXPPD VGETEXPPS VGETEXPSD VGETEXPSS VGETMANPD VGETMANPS VGETMANSD VGETMANSS VFIXUPIMMPD VFIXUPIMMPS VFIXUPIMMSD VFIXUPIMMSS VRCP14PD VRCP14PS VRCP14SD VRCP14SS VRNDSCALEPS VRNDSCALEPD VRNDSCALESS VRNDSCALESD VRSQRT14PD VRSQRT14PS VRSQRT14SD VRSQRT14SS VSCALEFPS VSCALEFPD VSCALEFSS VSCALEFSD VPCONFLICTD VPCONFLICTQ VPLZCNTD VPLZCNTQ VPBROADCASTMB2Q VPBROADCASTMW2D VEXP2PD, VEXP2PS VRCP28PD VRCP28PS VRCP28SD VRCP28SS VRSQRT28PD VRSQRT28PS VRSQRT28SD VRSQRT28SS VGATHERPF0DPS VGATHERPF0QPS VGATHERPF0DPD VGATHERPF0QPD VGATHERPF1DPS VGATHERPF1QPS VGATHERPF1DPD VGATHERPF1QPD VSCATTERPF0DPS VSCATTERPF0QPS VSCATTERPF0DPD VSCATTERPF0QPD VSCATTERPF1DPS VSCATTERPF1QPS VSCATTERPF1DPD VSCATTERPF1QPD VFPCLASSPS VFPCLASSPD VFPCLASSSS VFPCLASSSD VRANGEPS VRANGEPD VRANGESS VRANGESD VREDUCEPS VREDUCEPD VREDUCESS VREDUCESD VPMOVM2D VPMOVM2Q VPMOVM2B VPMOVM2W VPMOVD2M VPMOVQ2M VPMOVB2M VPMOVW2M VPMOVWB VPMOVSWB VPMOVUSWB VPMULLQ VEXTRACTF32X8 VEXTRACTF64X4 VEXTRACTI32X8 VEXTRACTI64X4
; MMX Instructions
C4=ADDPS ADDSS ANDNPS ANDPS CMPPS CMPSS COMISS CVTPI2PS CVTPS2PI CVTSI2SS CVTSS2SI CVTTPS2PI CVTTSS2SI DIVPS DIVSS LDMXCSR MASKMOVQ MAXPS MAXSS MINPS MINSS MOVAPS MOVHLPS MOVHPS MOVLHPS MOVLPS MOVMSKPS MOVNTPS MOVNTQ MOVSS MOVUPS MULPS MULSS ORPS PAVGB PAVGUSB PAVGW PEXTRW PF2ID PFACC PFADD PFCMPEQ PFCMPGE PFCMPGT PFMAX PFMIN PFMUL PFRCP PFRCPIT1 PFRCPIT2 PFRSQRT PFSUB PFSUBR PI2FD PINSRW PMAXSW PMAXUB PMINSW PMINUB PMOVMSKB PMULHRW PMULHUW PREFETCH PREFETCHNTA PREFETCHT0 PREFETCHT1 PREFETCHT2 PSADBW PSHUFW RCPPS RCPSS RDPMC RSQRTPS RSQRTSS SFENCE SHUFPS SQRTPS SQRTSS STMXCSR SUBPS SUBSS SYSCALL SYSENTER SYSEXIT SYSRET UCOMISS UNPCKHPS UNPCKLPS XORPS
; Constants (FALSE, NULL, TRUE)
C5=ADDPD ADDSD ANDNPD ANDPD CLFLUSH CMPPD COMISD CVTDQ2PD CVTDQ2PS CVTPD2DQ CVTPD2PI CVTPD2PS CVTPDPS CVTPI2PD CVTPS2DQ CVTPS2PD CVTSD2SI CVTSD2SS CVTSI2SD CVTSS2SD CVTTPD2DQ CVTTPD2PI CVTTPS2DQ CVTTPS2DQ CVTTSD2SI CVTTSI2SD CVTTSI2SS DIVPD DIVSD LFENCE MASKMOVDQU MAXPD MAXSD MFENCE MINPD MINSD MOVAPD MOVDQ2Q MOVDQA MOVDQU MOVHPD MOVLPD MOVMSKPD MOVNIG MOVNTDQ MOVNTI MOVNTPD MOVQ2DQ MOVQA MOVSQ MOVSXD MOVUPD MULPD MULSD ORPD PACKUSDW PADDQ PF2IW PFNACC PFPNACC PFRSQIT1 PI2FW PMULUDQ POPFQ PSHUFD PSHUFHW PSHUFLW PSLLDQ PSRAQ PSRLDQ PSUBQ PSWAPD PUNPCKHQDQ PUNPCKLQDQ PUSHFQ RDIVISR SHUFPD SQRTPD SQRTSD SUBPD SUBSD SWAPGS UCOMISD UNPCKHPD UNPCKLPD XORPD EXPORTS FALSE LIBRARY NULL TRUE
; Types (Windows Data Types + MASM Types)
C6=APIENTRY ATOM BOOL BOOLEAN BYTE CALLBACK CCHAR CHAR COLORREF CONST DWORD DWORDLONG DWORD_PTR DWORD32 DWORD64 FLOAT HACCEL HALF_PTR ^HANDLE ^HBITMAP ^HBRUSH ^HCOLORSPACE ^HCONV ^HCONVLIST ^HCURSOR ^HDC ^HDDEDATA ^HDESK ^HDROP ^HDWP ^HENHMETAFILE ^HFILE ^HFONT ^HGDIOBJ ^HGLOBAL ^HHOOK ^HICON ^HINSTANCE ^HKEY ^HKL ^HLOCAL ^HMENU ^HMETAFILE ^HMODULE ^HMONITOR ^HPALETTE ^HPEN ^HRESULT ^HRGN ^HRSRC ^HSZ ^HWINSTA ^HWND ^INT INT_PTR INT8 INT16 INT32 INT64 LANGID LCID LCTYPE LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 ^LPARAM LPBOOL LPBYTE LPCOLORREF LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG LPSTR LPTSTR LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR PCTSTR PCWSTR PDWORD PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE PHKEY PINT PINT_PTR PINT8 PINT16 PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 PLONG64 POINTER_32 POINTER_64 POINTER_SIGNED POINTER_UNSIGNED PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR PUCHAR PUHALF_PTR PUINT PUINT_PTR PUINT8 PUINT16 PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR PULONG32 PULONG64 PUSHORT PVOID PWCHAR PWORD PWSTR QWORD SC_HANDLE SC_LOCK SERVICE_STATUS_HANDLE SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR ^UINT UINT_PTR UINT8 UINT16 UINT32 UINT64 ULONG ULONGLONG ULONG_PTR ULONG32 ULONG64 UNICODE_STRING USHORT USN VOID WCHAR WINAPI WORD ^WPARAM ADDR BASIC C CARRY? FAR FAR16 FAR32 FORTRAN FWORD NEAR NEAR16 NEAR32 OVERFLOW? OWORD PARITY? PASCAL REAL4 REAL8 REAL10 SBYTE SDWORD SWORD STDCALL SYSCALL SIGN? VARARG ZERO?
; Compiler directives; MASM Keywords (non-code producing)
C7=%OUT .186 .286 .286C .286P .287 .386 .386C .386P .387 .486 .486P .586 .686 .686p .8086 .8087 .x64 .ALLOCSTACK .ARM .ALPHA .CODE .CONST .CREF .DATA .DATA? .DOSSEG .ENDPROLOG .ERR .ERR1 .ERR2 .ERRB .ERRDEF .ERRDIF .ERRDIFI .ERRE .ERRIDN .ERRIDNI .ERRNB .ERRNDEF .ERRNZ .EXIT .FARDATA .FARDATA? .FPO .K3D .LALL .LFCOND .LIST .LISTALL .LISTIF .LISTMACRO .LISTMACROALL .MMX .MODEL .MSFLOAT .NO87 .NOCREF .NOLIST .NOLISTIF .NOLISTMACRO .PUSHFRAME .PUSHREG .RADIX .SAFESEH .SALL .SAVEREG .SAVEXMM128 .SEQ .SETFRAME .SFCOND .STACK .STARTUP .TFCOND .TYPE .XALL .XCREF .XLIST .XMM ALIAS ALIGN ASSUME CATSTR COMM COMMENT+ DB DD DF DOSSEG DQ DT DUP DW ECHO ELSE ELSEIF ELSEIF1 ELSEIF2 ELSEIFB ELSEIFDEF ELSEIFDIF ELSEIFDIFI ELSEIFE ELSEIFIDN ELSEIFIDNI ELSEIFNB ELSEIFNDEF END ENDIF ENDM ENDP ENDS endw EQ EQU EVEN EXITM EXTERN EXTERNDEF EXTRN FOR FORC GE GOTO GROUP GT HIGH HIGHWORD IF IF1 IF2 IFB IFDEF IFDIF IFDIFI IFE IFIDN IFIDNI IFNB IFNDEF INCLUDE- INCLUDELIB- INSTR IRP IRPC LABEL LE LENGTH LENGTHOF LOCAL LOW LOWWORD LROFFSET LT MACRO MASK MMWORD MOD NAME NE OFFSET OPATTR OPTION ORG PAGE POPCONTEXT PROC PROTO PTR PUBLIC PURGE PUSHCONTEXT RECORD REPEAT REPT SEG SEGMENT SHORT SIZE SIZEOF SIZESTR STRUC STRUCT SUBSTR SUBTITLE SUBTTL TEXTEQU THIS TITLE- TYPE TYPEDEF UNION WHILE WIDTH XMMWORD YMMWORD casemap win64 frame stackbase
; High level constructs; MASM High Level Key Words (code producing)
C8=.BREAK .CONTINUE .ELSE .ELSEIF .ENDIF .ENDW .IF .REPEAT .UNTIL .UNTILCXZ .WHILE INVOKE .SKIP .UNTILCXZD .UNTILCXZE .UNTILCXZNE .UNTILCXZED .UNTILCXZNED .ENDF
; Macros; CaseSensitive Macro Ops (MASM Symbols reference)
C9=$ ? @@ @B @F @CatStr @code @CodeSize @Cpu @CurSeg @data @DataSize @Date @Environ @fardata @fardata? @FileCur @FileName @InStr @Interface @Line @Model @SizeStr @stack @SubStr @Time @Version @WordSize
; RC file
C10=#define #include ACCELERATORS ALT AUTOCHECKBOX AUTORADIOBUTTON BEGIN BITMAP BLOCK CAPTION CLASS COMBOBOX CONTROL CURSOR DIALOGEX DISCARDABLE EDITTEXT EXSTYLE FALSE FILEOS FILETYPE FILEVERSION FONT GROUPBOX ICON LISTBOX LTEXT MENU MENUITEM NOINVERT NULL POPUP PRODUCTVERSION PUSHBUTTON SEPARATOR SHIFT STRINGTABLE STYLE TRUE VALUE VERSIONINFO VIRTKEY
C11=
C12=
; Windows Messages and API Constants
C13=
; API commands
C14=
; Structures
C15=
;On Hold
C16=

[ReallyRad]
AddDlg=1
AddMnu=1
AddRes=1
AddVer=1
AddStr=1
CtlClk=1
MnuSel=1
AddFile=1
AddFolder=1
CtlNme=1

[RadHelp]
x86=$H\x86eas.hlp
winapi=$H\win32.hlp
masm=$H\masm32.chm
GoAsm=
fpu=$H\fphelp.hlp
default=
KeywordLists=x86,winapi,MASM64,masm,fpu
KeywordCacheFile=C:\Program Files\SCTTools\Editors\RadASM2\AddIns\hlpCA7F.tmp

[MenuMacro]
Ver=100

[Version]
Version=2224

[Group]
Group=Assembly,Resources,Misc
